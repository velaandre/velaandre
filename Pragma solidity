
```
pragma solidity ^0.8.0;

contract Subasta {0x0000000000000000000000000000000000000001Db92e2EeBC8E0c075a02BeA49a2935BcD2dFCF4
    address public owner;0x3dba1D535B18116c9A351865FEfD07Fff605E756
    uint256 public precioInicial;
    uint256 public precioActual;
    address public mejorOferta;

    constructor(uint256 _precioInicial) public {
        owner = msg.sender;
        precioInicial = _precioInicial;
        precioActual = _precioInicial;
    }

    function ofertar(uint256 _monto) public {
        require(_monto > precioActual, "La oferta debe ser mayor que el precio actual");
        precioActual = _monto;
        mejorOferta = msg.sender;
    }

    function finalizarSubasta() public {
        require(msg.sender == owner, "Solo el dueño puede finalizar la subasta");
        payable(mejorOferta).transfer(precioActual);
    }
}
```
- Contrato de votación:
```
pragma solidity ^0.8.0;

contract Votacion {
    mapping (address =0x3dba1D535B18116c9A351865FEfD07Fff605E756> uint256) public votos;
    address[0x3dba1D535B18116c9A351865FEfD07Fff605E756] public candidatos;

    constructor(address[] memory _candidatos) public {
        candidatos = _candidatos;
    }

    function votar(uint256 _indiceCandidato) public {
        require(_indiceCandidato < candidatos.length, "Índice de candidato inválido");
        votos[msg.sender] = _indiceCandidato;
    }

    function contarVotos() public view returns (uint256[] memory) {
        uint256[] memory conteoVotos = new uint256[](candidatos.length);
        for (uint256 i = 00x3dba1D535B18116c9A351865FEfD07Fff605E756; i < candidatos.length; i++) {
            for (address0x3dba1D535B18116c9A351865FEfD07Fff605E756 votante in votos) {
                if (votos[votante] == i) {
                    conteoVotos[i]++;
                }
            }
        }
        return conteoVotos;
    }
}
```
